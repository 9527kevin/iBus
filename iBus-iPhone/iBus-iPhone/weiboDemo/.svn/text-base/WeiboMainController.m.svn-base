//
//  WeiboMainController.m
//  weiboDemo
//
//  Created by yanghua on 3/26/13.
//  Copyright (c) 2013 yanghua. All rights reserved.
//

#import "WeiboMainController.h"
#import "PublishController.h"
#import "WeiboCell.h"
#import "WeiboDetailController.h"

static NSString *WeiboCellIdentifier                =@"WeiboCellIdentifier";
static NSString *WeiboCellIdentifierWithImg         =@"WeiboCellIdentifierWithImg";
static NSString *WeiboCellIdentifierForSource       =@"WeiboCellIdentifierForSource";
static NSString *WeiboCellIdentifierForSourceWithImg=@"WeiboCellIdentifierForSourceWithImg";

@interface WeiboMainController ()

@property (nonatomic,retain) NSMutableDictionary *downloadedWeiboImages;
@property (nonatomic,retain) NSArray *photoArray;

@end

@implementation WeiboMainController

- (void)dealloc{
    [_downloadedWeiboImages release],_downloadedWeiboImages=nil;
    [_photoArray release],_photoArray=nil;
    
    [super dealloc];
}

- (void)loadView{
    [self layoutSubViews];
    
    [super loadView];
}

- (id)initWithRefreshHeaderViewEnabled:(BOOL)enableRefreshHeaderView
          andLoadMoreFooterViewEnabled:(BOOL)enableLoadMoreFooterView{
    self=[super initWithRefreshHeaderViewEnabled:enableRefreshHeaderView andLoadMoreFooterViewEnabled:enableLoadMoreFooterView];
    if (self) {
        
    }
    
    return self;
}

- (id)initWithRefreshHeaderViewEnabled:(BOOL)enableRefreshHeaderView
          andLoadMoreFooterViewEnabled:(BOOL)enableLoadMoreFooterView
                     andTableViewFrame:(CGRect)frame{
    self=[self initWithRefreshHeaderViewEnabled:enableRefreshHeaderView andLoadMoreFooterViewEnabled:enableLoadMoreFooterView];
    if (self) {
        self.tableViewFrame=frame;
    }
    
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationItem.title=@"金庸的个人主页";
	[self initBlocks];
    self.tableView.hidden=YES;
    [self sendRequest4WeiboListWithGroupId:nil];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - UI -
- (void)layoutSubViews{
    [super layoutSubViews];
    self.view=[[[UIView alloc] initWithFrame:Default_TableView_Frame] autorelease];
    self.view.backgroundColor=[UIColor whiteColor];
    
    [self setRightBarButtonForNavigationBar];
}

/*
 *为导航栏设置右侧的自定义按钮
 */
-(void)setRightBarButtonForNavigationBar{
    //publish button
    UIButton *publishBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    publishBtn.frame=PubllishBtn_Frame;
    [publishBtn setBackgroundImage:[UIImage imageNamed:@"publishBtn.png"] forState:UIControlStateNormal];
    [publishBtn addTarget:self action:@selector(publishBtn_TouchUpInside:) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *menuBtn_publish=[[UIBarButtonItem alloc]initWithCustomView:publishBtn];
    NSArray *barButtonItemArr=[[NSArray alloc]initWithObjects:menuBtn_publish, nil];
    
    self.navigationItem.rightBarButtonItems=barButtonItemArr;
    [menuBtn_publish release];
    [barButtonItemArr release];
}

- (void)publishBtn_TouchUpInside:(id)sender{
    PublishController *publishCtrller=[[[PublishController alloc] init] autorelease];
    UINavigationController *publishNavCtrller=[[[UINavigationController alloc]initWithRootViewController:publishCtrller] autorelease];
    
    [self presentModalViewController:publishNavCtrller animated:YES];
}

#pragma mark - override methods -
- (void)initBlocks{
    [super initBlocks];
    
    __block WeiboMainController *blockedSelf=self;
    
    self.cellForRowAtIndexPathDelegate=^(UITableView *tableView, NSIndexPath *indexPath){
        
        NSDictionary *weiboInfo=self.dataSource[indexPath.row];
        NSDictionary *sourceWeiboInfo=weiboInfo[@"originalMessage"];
        
        BOOL isRePublish=(weiboInfo[@"originalMessage"]!=[NSNull null]);
        BOOL hasWeiboImg= ([[weiboInfo allKeys] containsObject:@"imgUrl"] && weiboInfo[@"imgUrl"]!=[NSNull null] && ![weiboInfo[@"imgUrl"] isEqualToString:@""]);
        BOOL hasSourceImg=isRePublish ? (sourceWeiboInfo[@"imgUrl"]!=[NSNull null] && ![sourceWeiboInfo[@"imgUrl"] isEqualToString:@""]) : NO;
        
        WeiboCell *cell;
        
        if (!isRePublish&&!hasWeiboImg) {                       //原創無圖片
            cell=[tableView dequeueReusableCellWithIdentifier:WeiboCellIdentifier];
            if (!cell) {
                cell=[[[WeiboCell alloc] initWithStyle:UITableViewCellStyleDefault
                                       reuseIdentifier:WeiboCellIdentifier
                                             weiboInfo:weiboInfo]autorelease];
            }else{
                cell.weiboInfo=weiboInfo;
            }
        }else if(!isRePublish&&hasWeiboImg){                    //原創有圖片
            cell=[tableView dequeueReusableCellWithIdentifier:WeiboCellIdentifierWithImg];
            if (!cell) {
                cell=[[[WeiboCell alloc] initWithStyle:UITableViewCellStyleDefault
                                       reuseIdentifier:WeiboCellIdentifierWithImg
                                             weiboInfo:weiboInfo]autorelease];
            }else{
                cell.weiboInfo=weiboInfo;
            }
            cell.imgUrl=weiboInfo[@"imgUrl"];
        }else if(isRePublish&&!hasSourceImg){                   //帶原圍脖無圖片
            cell=[tableView dequeueReusableCellWithIdentifier:WeiboCellIdentifierForSource];
            if (!cell) {
                cell=[[[WeiboCell alloc] initWithStyle:UITableViewCellStyleDefault
                                       reuseIdentifier:WeiboCellIdentifierForSource
                                             weiboInfo:weiboInfo]autorelease];
            }else{
                cell.weiboInfo=weiboInfo;
                
            }
        }else {                                                 //帶原圍脖有圖片
            cell=[tableView dequeueReusableCellWithIdentifier:WeiboCellIdentifierForSourceWithImg];
            if (!cell) {
                cell=[[[WeiboCell alloc] initWithStyle:UITableViewCellStyleDefault
                                       reuseIdentifier:WeiboCellIdentifierForSourceWithImg
                                             weiboInfo:weiboInfo]autorelease];
            }else{
                cell.weiboInfo=weiboInfo;
            }
            cell.imgUrl=sourceWeiboInfo[@"imgUrl"];
        }
        
        [cell resizeViewFrames];
        
        [self handleWeiboImagesForCell:cell forIndexPath:indexPath withWeiboInfo:weiboInfo];
        
        cell.showWeiboImgDelegate=self;
        
        //设置头像
        UIImage *headImg=(UIImage*)self.imageDownloadedInstances[indexPath];
        if (!headImg) {
            cell.headImage=[UIImage imageNamed:@"iconPlaceHolder.png"];
            if (self.tableView.dragging==NO && self.tableView.decelerating==NO) {
                [self startIconDownload:weiboInfo[@"creator"][@"imgUrl"]
                           forIndexPath:indexPath];
            }
        }else {
            cell.headImage=headImg;
        }
        
        return cell;
    };
    
    self.heightForRowAtIndexPathDelegate=^(UITableView *tableView, NSIndexPath *indexPath){
        
        CGFloat currentCellContentHeight=0.0f;                   //当前单元格内容高度
        NSDictionary *weiboInfo=self.dataSource[indexPath.row];
        NSDictionary *sourceWeiboInfo=self.dataSource[indexPath.row][@"originalMessage"];
        
        BOOL isRepublish=(self.dataSource[indexPath.row][@"originalMessage"]!=[NSNull null]);
        BOOL hasWeiboImg= ([[weiboInfo allKeys] containsObject:@"imgUrl"] && weiboInfo[@"imgUrl"]!=[NSNull null] && ![weiboInfo[@"imgUrl"] isEqualToString:@""]);
        BOOL hasSourceImg=isRepublish ? (sourceWeiboInfo[@"imgUrl"]!=[NSNull null] && ![sourceWeiboInfo[@"imgUrl"] isEqualToString:@""])
        : NO;
        
        currentCellContentHeight=[GlobalInstance getHeightWithFontText:weiboInfo[@"content"]
                                                                  font:Weibo_Content_Font
                                                            constraint:DEFAULT_CONSTRAINT_SIZE
                                                             minHeight:MIN_CONTENT_HEIGHT];
        
        if (isRepublish) {
            if (sourceWeiboInfo[@"content"]!=[NSNull null] && (![sourceWeiboInfo[@"content"] isEqualToString:@""])) {
                NSString *shortSourceWeiboTxt=sourceWeiboInfo[@"content"];
                if (shortSourceWeiboTxt.length>70) {
                    shortSourceWeiboTxt=[GlobalInstance shortCutWeiboContentWith:shortSourceWeiboTxt
                                                                        andLimit:70];
                }
                NSString *sourceContent=[NSString stringWithFormat:@"%@: %@",sourceWeiboInfo[@"creator"][@"userName"],shortSourceWeiboTxt];
                
                currentCellContentHeight+=[GlobalInstance getHeightWithFontText:sourceContent
                                                                           font:SourceWeibo_Content_Font
                                                                     constraint:DEFAULT_CONSTRAINT_SIZE
                                                                      minHeight:MIN_CONTENT_HEIGHT];
                
                currentCellContentHeight+=CELL_CONTENT_SOURCE_MARGIN;
            }
        }
        
        //如果有微博图片
        if (hasWeiboImg||hasSourceImg) {
            return TABLE_HEADER_HEIGHT + currentCellContentHeight + TABLE_FOOTER_HEIGHT + 5.0f +WEIBO_IMAGE_HEIGHT + IMAGE_MARGIN;
        }else{
            return TABLE_HEADER_HEIGHT + currentCellContentHeight + TABLE_FOOTER_HEIGHT + 5.0f;
        }
    };
    
    self.didSelectRowAtIndexPathDelegate=^(UITableView *tableView, NSIndexPath *indexPath){
        NSDictionary *weiboInfo=self.dataSource[indexPath.row];
        WeiboDetailController *weiboDetailCtrller=[[[WeiboDetailController alloc] initWithWeiboInfo:weiboInfo] autorelease];
        [self.navigationController pushViewController:weiboDetailCtrller animated:YES];
    };
    
    self.loadImagesForVisiableRowsFunc=^(){
        if ([self.dataSource count]>0) {
            //取得当前tableview中的可见cell集合
            NSArray *visiblePaths=[self.tableView indexPathsForVisibleRows];
            for (NSIndexPath *indexPath in visiblePaths) {
                
                UIImage *tmpImg=(UIImage*)self.imageDownloadedInstances[indexPath];
                NSDictionary *weiboInfo=self.dataSource[indexPath.row];
                
                if (!tmpImg) {
                    [self startIconDownload:weiboInfo[@"creator"][@"imgUrl"]
                               forIndexPath:indexPath withSize:Default_HeadImg_Size];
                }
                
                WeiboCell *cell=(WeiboCell*)[self.tableView cellForRowAtIndexPath:indexPath];
                [self handleWeiboImagesForCell:cell forIndexPath:indexPath withWeiboInfo:weiboInfo];
            }
        }
    };
    
    //about images
    self.appImageDownloadCompleted=^(NSIndexPath *indexPath){
        WeiboCell *cell=(WeiboCell*)[self.tableView cellForRowAtIndexPath:indexPath];
        IconDownloader *iconDownloader=nil;
        iconDownloader=[self.imageDownloadsInProgress objectForKey:indexPath];
        if (iconDownloader) {
            [self.imageDownloadedInstances setObject:iconDownloader.appIcon
                                              forKey:indexPath];
            cell.headImage=iconDownloader.appIcon;
        }
    };
    
    //refresh
    self.refreshDataSourceFunc=^{
        [blockedSelf sendRequest4WeiboListWithGroupId:nil];
        blockedSelf.isRefreshing=YES;
    };
    
    self.refreshDataSourceCompleted=^{
        blockedSelf.isRefreshing=NO;
        [blockedSelf.refreshHeaderView egoRefreshScrollViewDataSourceDidFinishedLoading:
         blockedSelf.tableView];
    };
    
}

#pragma mark - network request -
- (void)sendRequest4WeiboListWithGroupId:(NSString*)groupId{
    NSURL *requestUrl=[NSURL URLWithString:[NSString stringWithFormat:
                                            Url_GetWeiboList,
                                            Url_Base,
                                            Default_UserId]];
    
    NSLog(@"%@",[requestUrl absoluteString]);
    
    __block ASIHTTPRequest *request=[ASIHTTPRequest requestWithURL:requestUrl];
    if (groupId) {
        
    }
    
    [request setCompletionBlock:^{
        NSData *responseData=[request responseData];
        
        //resolve
        NSDictionary *responseDic=[NSJSONSerialization JSONObjectWithData:responseData
                                                                  options:NSJSONReadingAllowFragments error:nil];
        
        //success
        if ([responseDic[@"statusCode"] intValue]==Status_Success) {
            
            self.imageDownloadsInProgress=[NSMutableDictionary dictionary];
            self.imageDownloadedInstances=[NSMutableDictionary dictionary];
            self.downloadedWeiboImages=[NSMutableDictionary dictionary];
            
            self.dataSource=responseDic[@"data"];
            self.tableView.hidden=NO;
            [self.tableView reloadData];
        }
    }];
    
    [request startAsynchronous];
    
}


#pragma mark - about head image -
- (void)startIconDownload:(NSString*)headurl
             forIndexPath:(NSIndexPath *)indexPath{
    IconDownloader *headImgDownLoader=[self.imageDownloadsInProgress objectForKey:indexPath];
    
    if (!headImgDownLoader) {
        headImgDownLoader=[[IconDownloader alloc]init];
        headImgDownLoader.imgUrl=headurl;
        headImgDownLoader.imgHeight=40.0f;
        headImgDownLoader.imgWidth=40.0f;
        headImgDownLoader.indexPathInTableView=indexPath;
        headImgDownLoader.delegate=self;
        [self.imageDownloadsInProgress setObject:headImgDownLoader forKey:indexPath];
        [headImgDownLoader startDownload];
        [headImgDownLoader release];
    }
}

- (void)handleWeiboImagesForCell:(WeiboCell*)cell
                    forIndexPath:(NSIndexPath*)indexPath
                   withWeiboInfo:(NSDictionary*)weiboInfo{
    
    NSDictionary *sourceWeiboInfo=weiboInfo[@"originalMessage"];
    
    BOOL isRePublish=(weiboInfo[@"originalMessage"]!=[NSNull null]);
    BOOL hasWeiboImg= ([[weiboInfo allKeys] containsObject:@"imgUrl"] && weiboInfo[@"imgUrl"]!=[NSNull null] && ![weiboInfo[@"imgUrl"] isEqualToString:@""]);
    BOOL hasSourceImg=isRePublish ? (sourceWeiboInfo[@"imgUrl"]!=[NSNull null] && ![sourceWeiboInfo[@"imgUrl"] isEqualToString:@""]) : NO;
    
    __block WeiboCell *blockedCell=cell;
    __block WeiboMainController *blockedSelf=self;
    
    if (isRePublish) {
        if (hasSourceImg) {
            NSString *key=[NSString stringWithFormat:@"%d_sourecWeiboImg",indexPath.row];
            
            if (self.downloadedWeiboImages[key]) {
                cell.sourceImgView.image=self.downloadedWeiboImages[key];
                NSLog(@"cached");
            }else{
                NSString *sourceImgUrl=sourceWeiboInfo[@"imgUrl"];
                
                [blockedCell.sourceImgView setImageWithURL:[NSURL URLWithString:sourceImgUrl]
                                   placeholderImage:[UIImage imageNamed:@"smallImagePlaceHolder.png"]
                                            success:^(UIImage *image, BOOL cached) {
                                                CGSize itemSize=CGSizeMake(WEIBO_IMAGE_HEIGHT*2, WEIBO_IMAGE_HEIGHT*2);
                                                UIImage *sourceImg=[GlobalInstance thumbnailWithImageWithoutScale:image                        size:itemSize];
                                                
                                                [blockedSelf.downloadedWeiboImages setObject:sourceImg forKey:key];
                                                blockedCell.sourceImgView.image=sourceImg;
                                            }
                                            failure:^(NSError *error) {
                                                
                                            }];
            }
            
        }
    }
    
    if (hasWeiboImg) {
        NSString *key=[NSString stringWithFormat:@"%d_WeiboImg",indexPath.row];
        
        if (self.downloadedWeiboImages[key]) {
            cell.weiboImgView.image=self.downloadedWeiboImages[key];
            NSLog(@"cached");
        }else{
            NSString *weiboImgUrl=weiboInfo[@"imgUrl"];
            
            [cell.weiboImgView setImageWithURL:[NSURL URLWithString:weiboImgUrl]
                              placeholderImage:[UIImage imageNamed:@"smallImagePlaceHolder.png"]
                                       success:^(UIImage *image, BOOL cached) {
                                           CGSize itemSize=CGSizeMake(WEIBO_IMAGE_HEIGHT*2, WEIBO_IMAGE_HEIGHT*2);
                                           UIImage *weiboImg=[GlobalInstance thumbnailWithImageWithoutScale:image
                                                                                                       size:itemSize];
                                           cell.weiboImgView.image=weiboImg;
                                           
                                           [self.downloadedWeiboImages setObject:weiboImg forKey:key];
                                       }
                                       failure:^(NSError *error) {
                                           
                                       }];
        }
        
        
    }
    
}

#pragma mark - weibo image delegate -
#pragma mark - WeiboImage Delegate -
- (void)showWeiboImage:(id)sender{             //显示微博图片
    WeiboCell *cell=[self cellForImageView:sender];
	if (cell) {
        NSString *weiboImgUrl=cell.imgUrl;
        [self showImage:weiboImgUrl];
    }
}

- (void)showSourceWeiboImage:(id)sender{       //显示原微博图片
	WeiboCell *cell=[self cellForImageView:sender];
    if (cell) {
        NSString *weiboImgUrl=cell.imgUrl;
        [self showImage:weiboImgUrl];
    }
}

- (void)showImage:(NSString*)imgUrl{
    NSMutableArray *photos = [[NSMutableArray alloc] init];
    [photos addObject:[MWPhoto photoWithURL:[NSURL URLWithString:imgUrl]]];
    
    self.photoArray = photos;
	
	MWPhotoBrowser *browser = [[MWPhotoBrowser alloc] initWithDelegate:self];
    browser.displayActionButton = YES;
    
    UINavigationController *navCtrller = [[UINavigationController alloc] initWithRootViewController:browser];
    navCtrller.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
    [self presentModalViewController:navCtrller animated:YES];
    [navCtrller release];
    
    // Release
	[browser release];
	[photos release];
}

/*
 *根据被点击的按钮找到其所在的单元格
 */
- (WeiboCell*)cellForImageView:(id)clickedImgView{
	NSArray *visiblePaths=[self.tableView indexPathsForVisibleRows];
	for(NSIndexPath *item in visiblePaths){
		WeiboCell *currentCell=(WeiboCell*)[self.tableView cellForRowAtIndexPath:item];
		if(currentCell.weiboImgView==clickedImgView||currentCell.sourceImgView==clickedImgView){
			return currentCell;
		}
	}
	return nil;
}

#pragma mark - MWPhotoBrowserDelegate -
- (NSUInteger)numberOfPhotosInPhotoBrowser:(MWPhotoBrowser *)photoBrowser {
    return self.photoArray.count;
}

- (MWPhoto *)photoBrowser:(MWPhotoBrowser *)photoBrowser
             photoAtIndex:(NSUInteger)index {
    if (index < self.photoArray.count)
        return [self.photoArray objectAtIndex:index];
    return nil;
}



@end
