//
//  WeiboRAndCController.m
//  weiboDemo
//
//  Created by yanghua on 4/17/13.
//  Copyright (c) 2013 yanghua. All rights reserved.
//

#import "WeiboRAndCController.h"
#import "FollowedController.h"

@interface WeiboRAndCController ()

@property (nonatomic,retain) UIButton *delBtn;
@property (nonatomic,retain) MTStatusBarOverlay *overlay;

@end

@implementation WeiboRAndCController

- (void)dealloc{
	[_publishTxtView release],_publishTxtView=nil;
    [_tipbarView release],_tipbarView=nil;
    [_strLengthLabel release],_strLengthLabel=nil;
	[_showTitle release],_showTitle=nil;
	[_theSubjectId release],_theSubjectId=nil;
	[_sourceContent release],_sourceContent=nil;
    [_sourceId release],_sourceId=nil;
    [_overlay release],_overlay=nil;
    
    [_commentCreatorId release],_commentCreatorId=nil;
    
	[super dealloc];
}

- (id)initWithOperateType:(OperateTypeEnum)operateType
              comeInParam:(NSMutableDictionary*)params
{
    self = [super init];
    if (self) {
        _operateType=operateType;
		_showTitle=[params[@"showTitle"] retain];
		_theSubjectId=[params[@"theSubjectId"] retain];
		_sourceContent=[params[@"sourceContent"] retain];
        
        if (_operateType==reply) {
            _sourceId=[params[@"theSourceId"] retain];
            _commentCreatorId=[params[@"commentCreatorId"] retain];
        }
		
    }
    return self;
}


#pragma mark - View lifecycle
- (void)loadView
{
    [self layoutSubViews];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	self.navigationItem.title=self.showTitle;
	[self initPlaceholderTextView];
    [self initStrLengthLabel];
    [self setCustomToolbarItems];
	[self setRightBarButtonForNavigationBar];           //设置右侧自定义的导航栏按钮
	[self setLeftBarButtonForNavigationBar];
    
    if (self.operateType==republish) {
        self.publishTxtView.text=self.sourceContent;
		NSRange selectedLoc=NSMakeRange(0, 0);
		self.publishTxtView.selectedRange=selectedLoc;
        [self textViewDidChange:self.publishTxtView];
    }
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

- (void)viewDidUnload
{
    [super viewDidUnload];
}

#pragma mark - UI -
- (void)layoutSubViews{
    [super layoutSubViews];
    self.view=[[[UIView alloc] initWithFrame:Default_TableView_Frame] autorelease];
    self.view.backgroundColor=[UIColor whiteColor];
}

#pragma mark - UITextViewDelegate -
//显示输入剩余可输入字符个数
-(void)textViewDidChange:(UITextView *)textView{
	int avaliableStrLength=Content_Max_Length-[self.publishTxtView.text length];
	if (avaliableStrLength<=20&&avaliableStrLength>0) {
		self.strLengthLabel.textColor=[UIColor redColor];
	}else if (avaliableStrLength<=0) {
		avaliableStrLength=0;
		self.publishTxtView.text=[self.publishTxtView.text substringToIndex:Content_Max_Length];
	}else {
		self.strLengthLabel.textColor=[UIColor blackColor];
	}
	
	self.strLengthLabel.text=[NSString stringWithFormat:@"%d",avaliableStrLength];
    
    if ([self.strLengthLabel.text isEqualToString:[NSString stringWithFormat:@"%d",Content_Max_Length]]) {
        self.delBtn.hidden=YES;
    }else{
        self.delBtn.hidden=NO;
    }
}

#pragma mark - Private method -
/*
 *实例化工具栏提示组件
 */
-(void)initMTStatusBarOverlay{
    _overlay = [MTStatusBarOverlay sharedInstance];
    _overlay.animation = MTStatusBarOverlayAnimationFallDown;  // MTStatusBarOverlayAnimationShrink
    _overlay.detailViewMode = MTDetailViewModeHistory;         // enable automatic history-tracking and show in detail-view
}

/*
 *實例化文本輸入框
 */
-(void)initPlaceholderTextView{
    //文本输入框（带占位符）
	UIPlaceHolderTextView *txtView=[[UIPlaceHolderTextView alloc]initWithFrame:CGRectMake(self.view.frame.origin.x, self.view.frame.origin.y, self.view.frame.size.width, 130)];
	self.publishTxtView=txtView;
    [txtView release];
	self.publishTxtView.backgroundColor=[UIColor whiteColor];
	self.publishTxtView.placeholder=@"说点什么吧...";
	self.publishTxtView.delegate=self;
	[self.publishTxtView setFont:[UIFont fontWithName:@"Arial" size:Default_Font_Size]];
	[self.view addSubview:self.publishTxtView];
	[self.publishTxtView becomeFirstResponder];
    
}

/*
 *實例化字符長度標簽與刪除按鈕
 */
-(void)initStrLengthLabel{
    CGFloat X_tipbarView=self.publishTxtView.frame.origin.x;
    CGFloat y_tipbarView=self.publishTxtView.frame.origin.y+self.publishTxtView.frame.size
    .height;
    UIView *tmpTipbarView=[[UIView alloc]initWithFrame:CGRectMake(X_tipbarView, y_tipbarView, self.publishTxtView.frame.size.width, 30)];
    self.tipbarView=tmpTipbarView;
    self.tipbarView.backgroundColor=[UIColor whiteColor];
    [self.view addSubview:self.tipbarView];
    [tmpTipbarView release];
    
    //@ 按钮
    UIButton *atBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    atBtn.frame=CGRectMake(15,0,25,25);
    [atBtn setBackgroundImage:[UIImage imageNamed:@"atBtn.png"] forState:UIControlStateNormal];
    [atBtn addTarget:self action:@selector(atBtn_touchUpInside:) forControlEvents:UIControlEventTouchUpInside];
    [self.tipbarView addSubview:atBtn];
    
    //设置提示字符数的Label
	CGFloat x_lbl=self.tipbarView.frame.origin.x+self.tipbarView.frame.size.width-60;
	CGFloat y_lbl=0;
    
	ClickableLabel *strLabel=[[ClickableLabel alloc]initWithFrame:CGRectMake(x_lbl, y_lbl, 33, 25)];
	self.strLengthLabel=strLabel;
    [self.strLengthLabel setLblDelegate:self];       //設置其代理為當前controller
    self.strLengthLabel.textColor=ColorWithRGBA(105, 105, 105, 1.0);
	self.strLengthLabel.text=[NSString stringWithFormat:@"%d",Content_Max_Length];
	self.strLengthLabel.textAlignment=UITextAlignmentLeft;
	[self.tipbarView addSubview:self.strLengthLabel];
	[strLabel release];
    
    //設置刪除按鈕
    _delBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    self.delBtn.frame=CGRectMake(x_lbl+self.strLengthLabel.frame.size.width, 5, 16, 16);
    [self.delBtn setBackgroundImage:[UIImage imageNamed:@"deleteBtn.png"] forState:UIControlStateNormal];
    self.delBtn.hidden=YES;
    [self.delBtn addTarget:self action:@selector(doClickAtTarget:) forControlEvents:UIControlEventTouchUpInside];
    [self.tipbarView addSubview:self.delBtn];
}

- (void)atBtn_touchUpInside:(id)sender{
    FollowedController *followedCtrller=[[[FollowedController alloc] initWithRefreshHeaderViewEnabled:NO andLoadMoreFooterViewEnabled:NO andTableViewFrame:Default_TableView_Frame loadType:publish_load] autorelease];
    
    UINavigationController *followedListNavCtrller=[[UINavigationController alloc]initWithRootViewController:followedCtrller];
    
    [self presentModalViewController:followedListNavCtrller animated:YES];
    [followedListNavCtrller release];
}

/*
 *为导航栏设置右侧的自定义按钮
 */
-(void)setRightBarButtonForNavigationBar{
	UIButton *btn=[UIButton buttonWithType:UIButtonTypeCustom];
	btn.frame=Operate_Button_Frame;
	[btn setBackgroundImage:[UIImage imageNamed:@"publishBtn.png"]
                   forState:UIControlStateNormal];
	[btn addTarget:self
            action:@selector(send_touchUpInside)
  forControlEvents:UIControlEventTouchUpInside];
	UIBarButtonItem *menuBtn=[[UIBarButtonItem alloc]initWithCustomView:btn];
	self.navigationItem.rightBarButtonItem=menuBtn;
	[menuBtn release];
}

/*
 *为导航栏设置左侧的自定义返回按钮
 */
-(void)setLeftBarButtonForNavigationBar{
	UIButton *btn=[UIButton buttonWithType:UIButtonTypeCustom];
	btn.frame=CGRectMake(0, 0, 45, 45);
	[btn setBackgroundImage:[UIImage imageNamed:@"closeBtn.png"] forState:UIControlStateNormal];
	[btn addTarget:self action:@selector(closeButton_touchUpInside) forControlEvents:UIControlEventTouchUpInside];
	
	UIBarButtonItem *backBarItem=[[UIBarButtonItem alloc]initWithCustomView:btn];
	self.navigationItem.leftBarButtonItem=backBarItem;
	[backBarItem release];
}

-(void)closeButton_touchUpInside{
    UIButton *btn=(UIButton*)self.navigationItem.leftBarButtonItem.customView;
	[btn setBackgroundImage:[UIImage imageNamed:@"closeBtn.png"] forState:UIControlStateNormal];
	
    [self dismissModalViewControllerAnimated:YES];
}


/*
 *设置输入框下方自定义工具栏
 */
-(void)setCustomToolbarItems{
    
}

/*
 *清空輸入內容
 */
-(void)clearInputFromTextView{
    self.publishTxtView.text=@"";
    self.strLengthLabel.text=[NSString stringWithFormat:@"%d",Content_Max_Length];
}


/*
 *发送按钮
 */
-(void)send_touchUpInside{
    
	//转发可以为空
    if ([self.publishTxtView.text length]==0 && self.operateType!=republish) {
		[GlobalInstance showMessageBoxWithMessage:@"请说点什么吧!"];
		return;
	}
    
	[self sendRequestWithOperateType];
}

- (void)sendRequestWithOperateType{
    
    NSURL *requestUrl=nil;
    __block ASIFormDataRequest *postRequest=nil;
    
    switch (self.operateType) {
        case reply:
        {
            requestUrl=[NSURL URLWithString:[NSString stringWithFormat:Url_ReplyComment,Url_Base,Default_UserId]];
            postRequest=[ASIFormDataRequest requestWithURL:requestUrl];
            [postRequest setPostValue:Default_UserId forKey:@"userId"];
            [postRequest setPostValue:self.publishTxtView.text forKey:@"content"];
            [postRequest setPostValue:self.theSubjectId forKey:@"replyCommentId"];
            [postRequest setPostValue:self.commentCreatorId forKey:@"replyCommentCreatorId"];
            [postRequest setPostValue:self.sourceId forKey:@"commentedMsgId"];
        }
            break;
            
        case republish:
        {
            requestUrl=[NSURL URLWithString:[NSString stringWithFormat:Url_Republish,Url_Base,Default_UserId]];
            postRequest=[ASIFormDataRequest requestWithURL:requestUrl];
            [postRequest setPostValue:self.publishTxtView.text forKey:@"content"];
            [postRequest setPostValue:self.theSubjectId forKey:@"forwardedMsgId"];
        }
            break;
            
        case comment:
        {
            requestUrl=[NSURL URLWithString:[NSString stringWithFormat:Url_Comment,Url_Base,Default_UserId]];
            postRequest=[ASIFormDataRequest requestWithURL:requestUrl];
            [postRequest setPostValue:self.publishTxtView.text forKey:@"content"];
            [postRequest setPostValue:self.theSubjectId forKey:@"commentedMsgId"];
        }
            break;
            
        default:
            break;
    }
    
    if (postRequest) {
        [postRequest startSynchronous];
        NSData *responseData=[postRequest responseData];
        if (responseData) {
            //resolve
            NSDictionary *responseDic=[NSJSONSerialization JSONObjectWithData:responseData
                                                                      options:NSJSONReadingAllowFragments error:nil];
            
            //success
            if ([responseDic[@"statusCode"] intValue]==Status_Success) {
                [self dismissViewControllerAnimated:YES completion:^{
                    //send a notification
                    OperateTypeEnum operateType=self.operateType;
                    [Default_Notification_Center postNotificationName:Notification_For_RAndCCompleted
                                                               object:[NSNumber numberWithInt:operateType]
                                                             userInfo:nil];
                }];
                
            }
        }
    }
    
    
}


#pragma mark - Click Event Delegate -
-(void)doClickAtTarget:(ClickableLabel *)label{
    if ([self.publishTxtView.text length]==0) {
        return;
    }
    
    UIActionSheet *actionSheet=[[UIActionSheet alloc] initWithTitle:@""
                                                           delegate:self
                                                  cancelButtonTitle:@"取消"
                                             destructiveButtonTitle:@"清空所有內容"
                                                  otherButtonTitles:nil];
    [actionSheet showInView:self.view];
    [actionSheet release];
}

#pragma mark -
#pragma mark UIActionSheet Delegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    switch (buttonIndex) {
        case 0:[self clearInputFromTextView];               //点击清除文字
            break;
            
        case 1:                     						//cancel
            break;
            
        default:
            break;
    }
}

#pragma mark - WBEngineDelegate Methods
//- (void)engine:(WBEngine *)engine requestDidSucceedWithResult:(id)result{
//	[self dismissViewControllerAnimated:YES completion:^{
//        //刷新父页面的评论列表
//        if ([self.delegate respondsToSelector:@selector(rAndCSuccessfully)]) {
//            [self.delegate rAndCSuccessfully];
//        }
//    }];
//}
//
//- (void)engine:(WBEngine *)engine requestDidFailWithError:(NSError *)error{
//	[GlobalInstance showMessageBoxWithMessage:@"请求数据失败"];
//}
//
//- (void)engineAuthorizeExpired:(WBEngine *)engine{
//	[GlobalInstance showMessageBoxWithMessage:@"授权已过期，请重新绑定"];
//}

#pragma mark - FollowedListDelegate -
//- (void)didSelectedFollowed:(Followed *)aFollowed{
//    NSString *sourceTxt=self.publishTxtView.text;
//    int mouseLoc=self.publishTxtView.selectedRange.location;
//    NSString *prevPart=[NSString stringWithFormat:@"%@ @%@ ",[sourceTxt substringToIndex:mouseLoc],aFollowed.nick];
//    self.publishTxtView.text=[NSString stringWithFormat:@"%@%@",prevPart,[sourceTxt substringFromIndex:mouseLoc]];
//    //重置光标
//    NSRange selectedLoc=NSMakeRange(prevPart.length, 0);
//    self.publishTxtView.selectedRange=selectedLoc;
//}


@end
