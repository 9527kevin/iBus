//
//  FollowerCtrller.m
//  weiboDemo
//
//  Created by yanghua on 3/22/13.
//  Copyright (c) 2013 yanghua. All rights reserved.
//

#import "FollowerController.h"
#import "RelationshipCell.h"

@interface FollowerController ()

@end

@implementation FollowerController

- (void)loadView{
    [self layoutSubViews];
    
    [super loadView];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self sendRequest4FollowerWithUserId:Default_UserId];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

#pragma mark - private methods
- (void)sendRequest4FollowerWithUserId:(NSString *)userId{
    
    NSURL *requestUrl=[NSURL URLWithString:[NSString stringWithFormat:Url_FansUserList,Url_Base,userId]];
    
    NSLog(@"%@",[requestUrl absoluteString]);
    
    ASIHTTPRequest *request=[ASIHTTPRequest requestWithURL:requestUrl];
    request.delegate=self;
    [request startAsynchronous];
    
    self.imageDownloadsInProgress=[NSMutableDictionary dictionary];
    self.imageDownloadedInstances=[NSMutableDictionary dictionary];
}

//#pragma mark - ASIHttpRequestDelegate
//- (void)request:(ASIHTTPRequest *)request
// didReceiveData:(NSData *)data{
//    NSDictionary *responseDic=[NSJSONSerialization JSONObjectWithData:data
//                               options:NSJSONReadingMutableContainers
//                               error:nil];
//    //success
//    if ([responseDic[@"statusCode"] intValue]==Status_Success) {
//        self.dataSource=responseDic[@"data"];
//
//        [self handleDataSourceAndGenerateGroupedUserSet];       //generate index
//        self.tableView.hidden=NO;
//        [self.tableView reloadData];
//    }else{
//        NSLog(@"fail");
//        NSLog(@"%d",[responseDic[@"statusCode"] intValue]);
//    }
//}

#pragma mark - notification -
- (void)registerNotifications{
    //after follow
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(followed_NotificationHandler:)
                                                 name:Notification_For_Followed
                                               object:nil];
    
    //after unFollow
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(unFollowed_NotificationHandler)
                                                 name:Notification_For_UnFollowed
                                               object:nil];
}

- (void)followed_NotificationHandler:(NSNotification*)notification{
    
}

- (void)unFollowed_NotificationHandler:(NSNotification*)notification{
    
}

@end
